#############################################################################
# Makefile for building: crete_run.test
# Generated by qmake (3.0) (Qt 5.3.0)
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = clang
CXX           = clang++
DEFINES       = -DBOOST_TEST_DYN_LINK -DCRETE_TEST=1 -DFUSION_MAX_VECTOR_SIZE=20 # Max number of FSM states
CFLAGS        = -pipe -g -Wall -O0 -W -fPIE $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -g -Wall -O0 -W -fPIE $(DEFINES)
CRETE_INC     = ../../include 
INCPATH       = -I. -I$(CRETE_INC) -I../../../lib/include
LINK          = clang++
LFLAGS        =
BOOSTTEST     = -lboost_unit_test_framework
LIBS          = $(SUBLIBS) $(BOOSTTEST) -lboost_serialization -lboost_filesystem -lboost_system -lboost_thread -lboost_program_options -L../../../lib/bin -lcrete_test_case  -lcrete_asio_server -lcrete_asio_client -lcrete_elf_reader -lcrete_proc_reader -lcrete_cluster -Wl,-rpath=../../../lib/bin
AR            = ar cqs
RANLIB        =
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = suite.cpp \
		../runner.cpp \
		../run_config.cpp
OBJECTS       = suite.o \
		../runner.o \
		../run_config.o
DIST          = suite.cpp
DESTDIR       = .#avoid trailing-slash linebreak
TARGET        = $(DESTDIR)/crete_run.test
TARGET_INST   = crete_run.test


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: $(TARGET)

$(TARGET): $(OBJECTS)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

dist:
	@test -d .tmp/crete_run.test1.0.0 || mkdir -p .tmp/crete_run.test1.0.0
	$(COPY_FILE) --parents $(DIST) .tmp/crete_run.test1.0.0/ && (cd `dirname .tmp/crete_run.test1.0.0` && $(TAR) crete_run.test1.0.0.tar crete_run.test1.0.0 && $(COMPRESS) crete_run.test1.0.0.tar) && $(MOVE) `dirname .tmp/crete_run.test1.0.0`/crete_run.test1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/crete_run.test1.0.0


clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean
	-$(DEL_FILE) $(TARGET)


####### Sub-libraries

check: first

####### Compile

####### Install

install: FORCE
	@test -d $(INSTALL_ROOT)/usr/bin || mkdir -p $(INSTALL_ROOT)/usr/bin
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/usr/bin/$(TARGET_INST)"

uninstall: FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/bin/$(TARGET_INST)"

FORCE:
